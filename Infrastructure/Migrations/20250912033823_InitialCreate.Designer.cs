// <auto-generated />
using System;
using Infrastructure.persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(FleetDbContext))]
    [Migration("20250912033823_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Driver", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<Guid?>("FleetId")
                        .HasColumnType("RAW(16)");

                    b.Property<int>("IsAvailable")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.HasIndex("FleetId");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("Domain.Entities.Fleet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.HasKey("Id");

                    b.ToTable("Fleets");
                });

            modelBuilder.Entity("Domain.Entities.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<Guid?>("FleetId")
                        .HasColumnType("RAW(16)");

                    b.Property<int>("IsActive")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.HasIndex("FleetId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("Domain.Entities.Driver", b =>
                {
                    b.HasOne("Domain.Entities.Fleet", null)
                        .WithMany("Drivers")
                        .HasForeignKey("FleetId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Domain.Entities.Vehicle", b =>
                {
                    b.HasOne("Domain.Entities.Fleet", null)
                        .WithMany("Vehicles")
                        .HasForeignKey("FleetId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsOne("Domain.ValueObjects.LicensePlate", "Plate", b1 =>
                        {
                            b1.Property<Guid>("VehicleId")
                                .HasColumnType("RAW(16)");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("NVARCHAR2(10)")
                                .HasColumnName("Plate");

                            b1.HasKey("VehicleId");

                            b1.ToTable("Vehicles");

                            b1.WithOwner()
                                .HasForeignKey("VehicleId");
                        });

                    b.Navigation("Plate")
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Fleet", b =>
                {
                    b.Navigation("Drivers");

                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
